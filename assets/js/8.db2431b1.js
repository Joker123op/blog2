(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{281:function(t,a,s){"use strict";s.r(a);var p=s(14),e=Object(p.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"app的渗透本质和web渗透一样"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#app的渗透本质和web渗透一样"}},[t._v("#")]),t._v(" App的渗透本质和web渗透一样")]),t._v(" "),a("p",[t._v("大部分的漏洞都存在并不是在客户端而是在服务端")]),t._v(" "),a("p",[t._v("例如：SQL注入、XSS、验证码绕过、越权漏洞、支付漏洞、CSRF、变量覆盖、反序列化、文件包含、SSRF、XXE、文件上传等等")]),t._v(" "),a("p",[t._v("渗透测试的核心就是把控传参。与App交互的还是服务器，用的还是http协议，交互的服务器还是同一个，网站和App和同一个服务器交互都是很正常的事情[一般都是用api通信]")]),t._v(" "),a("p",[t._v("正常的网站交互：浏览器 -> 网站")]),t._v(" "),a("p",[t._v("App的交互：App -> 网站")]),t._v(" "),a("p",[t._v("App的加壳脱壳就是对app的源码进行分析")]),t._v(" "),a("h2",{attrs:{id:"渗透测试必测的几个用户名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渗透测试必测的几个用户名"}},[t._v("#")]),t._v(" 渗透测试必测的几个用户名")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、 admin\n2、 test\n3、 ceshi\n4、 a\n5、 root\n6、 cs\n7、 system\n8、 user\n")])])]),a("p",[t._v("有些站点为了测试网站的观赏性，会放出一些用来测试的管理员账户。而管理员有的时候会忽略了这一点，就会导致我们有机可乘")])])}),[],!1,null,null,null);a.default=e.exports}}]);